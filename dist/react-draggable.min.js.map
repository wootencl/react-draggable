{"version":3,"file":"react-draggable.min.js","sources":["../node_modules/object-assign/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/classnames/index.js","../lib/utils/shims.js","../lib/utils/getPrefix.js","../lib/utils/domFns.js","../lib/utils/positionFns.js","../lib/DraggableCore.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../lib/utils/boundsObserver.js","../lib/Draggable.js","../lib/utils/propChangeDetection.js","../lib/umd.js"],"sourcesContent":["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// @flow\n// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\nexport function findInArray(array: Array<any> | TouchList, callback: Function): any {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (callback.apply(callback, [array[i], i, array])) return array[i];\n  }\n}\n\nexport function isFunction(func: any): boolean {\n  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n}\n\nexport function isNum(num: any): boolean {\n  return typeof num === 'number' && !isNaN(num);\n}\n\nexport function int(a: string): number {\n  return parseInt(a, 10);\n}\n\nexport function dontSetMe(props: Object, propName: string, componentName: string) {\n  if (props[propName]) {\n    return new Error(`Invalid prop ${propName} passed to ${componentName} - do not set this, set it on the child.`);\n  }\n}\n","// @flow\nconst prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nexport function getPrefix(prop: string='transform'): string {\n  // Checking specifically for 'window.document' is for pseudo-browser server-side\n  // environments that define 'window' as the global context.\n  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n\n  const style = window.document.documentElement.style;\n\n  if (prop in style) return '';\n\n  for (let i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n\n  return '';\n}\n\nexport function browserPrefixToKey(prop: string, prefix: string): string {\n  return prefix ? `${prefix}${kebabToTitleCase(prop)}` : prop;\n}\n\nexport function browserPrefixToStyle(prop: string, prefix: string): string {\n  return prefix ? `-${prefix.toLowerCase()}-${prop}` : prop;\n}\n\nfunction kebabToTitleCase(str: string): string {\n  let out = '';\n  let shouldCapitalize = true;\n  for (let i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n}\n\n// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\nexport default getPrefix();\n","// @flow\nimport {findInArray, isFunction, int} from './shims';\nimport browserPrefix, {browserPrefixToKey} from './getPrefix';\n\nimport type {ControlPosition, MouseTouchEvent} from './types';\n\nlet matchesSelectorFunc = '';\nexport function matchesSelector(el: Node, selector: string): boolean {\n  if (!matchesSelectorFunc) {\n    matchesSelectorFunc = findInArray([\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector'\n    ], function(method){\n      // $FlowIgnore: Doesn't think elements are indexable\n      return isFunction(el[method]);\n    });\n  }\n\n  // Might not be found entirely (not an Element?) - in that case, bail\n  // $FlowIgnore: Doesn't think elements are indexable\n  if (!isFunction(el[matchesSelectorFunc])) return false;\n\n  // $FlowIgnore: Doesn't think elements are indexable\n  return el[matchesSelectorFunc](selector);\n}\n\n// Works up the tree to the draggable itself attempting to match selector.\nexport function matchesSelectorAndParentsTo(el: Node, selector: string, baseNode: Node): boolean {\n  let node = el;\n  do {\n    if (matchesSelector(node, selector)) return true;\n    if (node === baseNode) return false;\n    node = node.parentNode;\n  } while (node);\n\n  return false;\n}\n\nexport function addEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.attachEvent) {\n    el.attachEvent('on' + event, handler);\n  } else if (el.addEventListener) {\n    el.addEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = handler;\n  }\n}\n\nexport function removeEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.detachEvent) {\n    el.detachEvent('on' + event, handler);\n  } else if (el.removeEventListener) {\n    el.removeEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = null;\n  }\n}\n\nexport function outerHeight(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetTop which is including margin. See getBoundPosition\n  let height = node.clientHeight;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height += int(computedStyle.borderTopWidth);\n  height += int(computedStyle.borderBottomWidth);\n  return height;\n}\n\nexport function outerWidth(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetLeft which is including margin. See getBoundPosition\n  let width = node.clientWidth;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width += int(computedStyle.borderLeftWidth);\n  width += int(computedStyle.borderRightWidth);\n  return width;\n}\nexport function innerHeight(node: HTMLElement): number {\n  let height = node.clientHeight;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height -= int(computedStyle.paddingTop);\n  height -= int(computedStyle.paddingBottom);\n  return height;\n}\n\nexport function innerWidth(node: HTMLElement): number {\n  let width = node.clientWidth;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width -= int(computedStyle.paddingLeft);\n  width -= int(computedStyle.paddingRight);\n  return width;\n}\n\n// Get from offsetParent\nexport function offsetXYFromParent(evt: {clientX: number, clientY: number}, offsetParent: HTMLElement): ControlPosition {\n  const isBody = offsetParent === offsetParent.ownerDocument.body;\n  const offsetParentRect = isBody ? {left: 0, top: 0} : offsetParent.getBoundingClientRect();\n\n  const x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;\n  const y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;\n\n  return {x, y};\n}\n\nexport function createCSSTransform({x, y}: {x: number, y: number}): Object {\n  // Replace unitless items with px\n  return {[browserPrefixToKey('transform', browserPrefix)]: 'translate(' + x + 'px,' + y + 'px)'};\n}\n\nexport function createSVGTransform({x, y}: {x: number, y: number}): string {\n  return 'translate(' + x + ',' + y + ')';\n}\n\nexport function getTouch(e: MouseTouchEvent, identifier: number): ?{clientX: number, clientY: number} {\n  return (e.targetTouches && findInArray(e.targetTouches, t => identifier === t.identifier)) ||\n         (e.changedTouches && findInArray(e.changedTouches, t => identifier === t.identifier));\n}\n\nexport function getTouchIdentifier(e: MouseTouchEvent): ?number {\n  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n}\n\n// User-select Hacks:\n//\n// Useful for preventing blue highlights all over everything when dragging.\n\n// Note we're passing `document` b/c we could be iframed\nexport function addUserSelectStyles(doc: ?Document) {\n  if (!doc) return;\n  let styleEl = doc.getElementById('react-draggable-style-el');\n  if (!styleEl) {\n    styleEl = doc.createElement('style');\n    styleEl.type = 'text/css';\n    styleEl.id = 'react-draggable-style-el';\n    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {background: transparent;}\\n';\n    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {background: transparent;}\\n';\n    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n  }\n  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n}\n\nexport function removeUserSelectStyles(doc: ?Document) {\n  try {\n    if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n    // $FlowIgnore: IE\n    if (doc.selection) {\n      // $FlowIgnore: IE\n      doc.selection.empty();\n    } else {\n      window.getSelection().removeAllRanges();  // remove selection caused by scroll\n    }\n  } catch (e) {\n    // probably IE\n  }\n}\n\nexport function styleHacks(childStyle: Object = {}): Object {\n  // Workaround IE pointer events; see #51\n  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n  return {\n    touchAction: 'none',\n    ...childStyle\n  };\n}\n\nexport function addClassName(el: HTMLElement, className: string) {\n  if (el.classList) {\n    el.classList.add(className);\n  } else {\n    if (!el.className.match(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`))) {\n      el.className += ` ${className}`;\n    }\n  }\n}\n\nexport function removeClassName(el: HTMLElement, className: string) {\n  if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`, 'g'), '');\n  }\n}\n","// @flow\nimport {isNum, int} from './shims';\nimport ReactDOM from 'react-dom';\nimport {getTouch, innerWidth, innerHeight, offsetXYFromParent, outerWidth, outerHeight} from './domFns';\n\nimport type Draggable from '../Draggable';\nimport type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';\nimport type DraggableCore from '../DraggableCore';\n\nexport function getBoundPosition(\n  draggable: Draggable,\n  x: number,\n  y: number,\n  bounds?:Bounds|string|false=draggable.props.bounds,\n): [number, number] {\n  // If no bounds, short-circuit and move on\n  if (!bounds) return [x, y];\n\n  // Clone new bounds\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  const node = findDOMNode(draggable);\n\n  if (typeof bounds === 'string') {\n    const {ownerDocument} = node;\n    const ownerWindow = ownerDocument.defaultView;\n    let boundNode;\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = ownerDocument.querySelector(bounds);\n    }\n\n    if (!(boundNode instanceof HTMLElement)) {\n      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n    // Add a resize listener for the bound node\n    draggable.boundsObserver.addBoundElementListener(boundNode);\n    \n    const nodeStyle = ownerWindow.getComputedStyle(node);\n    const boundNodeStyle = ownerWindow.getComputedStyle(boundNode);\n    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n    bounds = {\n      left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) + int(nodeStyle.marginLeft),\n      top: -node.offsetTop + int(boundNodeStyle.paddingTop) + int(nodeStyle.marginTop),\n      right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft +\n        int(boundNodeStyle.paddingRight) - int(nodeStyle.marginRight),\n      bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop +\n        int(boundNodeStyle.paddingBottom) - int(nodeStyle.marginBottom)\n    };\n  }\n\n  // Keep x and y below right and bottom limits...\n  if (isNum(bounds.right)) x = Math.min(x, bounds.right);\n  if (isNum(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n  // But above left and top limits.\n  if (isNum(bounds.left)) x = Math.max(x, bounds.left);\n  if (isNum(bounds.top)) y = Math.max(y, bounds.top);\n\n  return [x, y];\n}\n\nexport function snapToGrid(grid: [number, number], pendingX: number, pendingY: number): [number, number] {\n  const x = Math.round(pendingX / grid[0]) * grid[0];\n  const y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\n\nexport function canDragX(draggable: Draggable): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\n\nexport function canDragY(draggable: Draggable): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n}\n\n// Get {x, y} positions from event.\nexport function getControlPosition(e: MouseTouchEvent, touchIdentifier: ?number, draggableCore: DraggableCore): ?ControlPosition {\n  const touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\n  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n  const node = findDOMNode(draggableCore);\n  // User can provide an offsetParent if desired.\n  const offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n  return offsetXYFromParent(touchObj || e, offsetParent);\n}\n\n// Create an data object exposed by <DraggableCore>'s events\nexport function createCoreData(draggable: DraggableCore, x: number, y: number): DraggableData {\n  const state = draggable.state;\n  const isStart = !isNum(state.lastX);\n  const node = findDOMNode(draggable);\n\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node,\n      deltaX: 0, deltaY: 0,\n      lastX: x, lastY: y,\n      x, y,\n    };\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node,\n      deltaX: x - state.lastX, deltaY: y - state.lastY,\n      lastX: state.lastX, lastY: state.lastY,\n      x, y,\n    };\n  }\n}\n\n// Create an data exposed by <Draggable>'s events\nexport function createDraggableData(draggable: Draggable, coreData: DraggableData): DraggableData {\n  const scale = draggable.props.scale;\n  return {\n    node: coreData.node,\n    x: draggable.state.x + (coreData.deltaX / scale),\n    y: draggable.state.y + (coreData.deltaY / scale),\n    deltaX: (coreData.deltaX / scale),\n    deltaY: (coreData.deltaY / scale),\n    lastX: draggable.state.x,\n    lastY: draggable.state.y\n  };\n}\n\n// A lot faster than stringify/parse\nfunction cloneBounds(bounds: Bounds): Bounds {\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\n\nfunction findDOMNode(draggable: Draggable | DraggableCore): HTMLElement {\n  const node = ReactDOM.findDOMNode(draggable);\n  if (!node) {\n    throw new Error('<DraggableCore>: Unmounted during event!');\n  }\n  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n  return node;\n}\n","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport {matchesSelectorAndParentsTo, addEvent, removeEvent, addUserSelectStyles, getTouchIdentifier,\n        removeUserSelectStyles, styleHacks} from './utils/domFns';\nimport {createCoreData, getControlPosition, snapToGrid} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport log from './utils/log';\n\nimport type {EventHandler, MouseTouchEvent} from './utils/types';\nimport type {Element as ReactElement} from 'react';\n\n// Simple abstraction for dragging events names.\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup'\n  }\n};\n\n// Default to mouse events.\nlet dragEventFor = eventsFor.mouse;\n\ntype DraggableCoreState = {\n  dragging: boolean,\n  lastX: number,\n  lastY: number,\n  touchIdentifier: ?number\n};\n\nexport type DraggableBounds = {\n  left: number,\n  right: number,\n  top: number,\n  bottom: number,\n};\n\nexport type DraggableData = {\n  node: HTMLElement,\n  x: number, y: number,\n  deltaX: number, deltaY: number,\n  lastX: number, lastY: number,\n};\n\nexport type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;\n\nexport type ControlPosition = {x: number, y: number};\n\nexport type DraggableCoreProps = {\n  allowAnyClick: boolean,\n  cancel: string,\n  children: ReactElement<any>,\n  disabled: boolean,\n  enableUserSelectHack: boolean,\n  offsetParent: HTMLElement,\n  grid: [number, number],\n  handle: string,\n  onStart: DraggableEventHandler,\n  onDrag: DraggableEventHandler,\n  onStop: DraggableEventHandler,\n  onMouseDown: (e: MouseEvent) => void,\n};\n\n//\n// Define <DraggableCore>.\n//\n// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n// work well with libraries that require more control over the element.\n//\n\nexport default class DraggableCore extends React.Component<DraggableCoreProps, DraggableCoreState> {\n\n  static displayName = 'DraggableCore';\n\n  static propTypes = {\n    /**\n     * `allowAnyClick` allows dragging using any mouse button.\n     * By default, we only accept the left button.\n     *\n     * Defaults to `false`.\n     */\n    allowAnyClick: PropTypes.bool,\n\n    /**\n     * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n     * with the exception of `onMouseDown`, will not fire.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * By default, we add 'user-select:none' attributes to the document body\n     * to prevent ugly text selection during drag. If this is causing problems\n     * for your app, set this to `false`.\n     */\n    enableUserSelectHack: PropTypes.bool,\n\n    /**\n     * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n     * instead of using the parent node.\n     */\n    offsetParent: function(props: DraggableCoreProps, propName: $Keys<DraggableCoreProps>) {\n      if (props[propName] && props[propName].nodeType !== 1) {\n        throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n      }\n    },\n\n    /**\n     * `grid` specifies the x and y that dragging should snap to.\n     */\n    grid: PropTypes.arrayOf(PropTypes.number),\n    \n    /**\n     * `scale` specifies the scale of the area you are dragging inside of. It allows\n     * the drag deltas to scale correctly with how far zoomed in/out you are.\n     */\n    scale: PropTypes.number,\n\n    /**\n     * `handle` specifies a selector to be used as the handle that initiates drag.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable handle=\".handle\">\n     *              <div>\n     *                  <div className=\"handle\">Click me to drag</div>\n     *                  <div>This is some other content</div>\n     *              </div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    handle: PropTypes.string,\n\n    /**\n     * `cancel` specifies a selector to be used to prevent drag initialization.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return(\n     *               <Draggable cancel=\".cancel\">\n     *                   <div>\n     *                     <div className=\"cancel\">You can't drag from here</div>\n     *                     <div>Dragging here works fine</div>\n     *                   </div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    cancel: PropTypes.string,\n\n    /**\n     * Called when dragging starts.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onStart: PropTypes.func,\n\n    /**\n     * Called while dragging.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onDrag: PropTypes.func,\n\n    /**\n     * Called when dragging stops.\n     * If this function returns the boolean false, the drag will remain active.\n     */\n    onStop: PropTypes.func,\n\n    /**\n     * A workaround option which can be passed if onMouseDown needs to be accessed,\n     * since it'll always be blocked (as there is internal use of onMouseDown)\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    allowAnyClick: false, // by default only accept left click\n    cancel: null,\n    disabled: false,\n    enableUserSelectHack: true,\n    offsetParent: null,\n    handle: null,\n    grid: null,\n    transform: null,\n    onStart: function(){},\n    onDrag: function(){},\n    onStop: function(){},\n    onMouseDown: function(){}\n  };\n\n  state = {\n    dragging: false,\n    // Used while dragging to determine deltas.\n    lastX: NaN, lastY: NaN,\n    touchIdentifier: null\n  };\n\n  componentWillUnmount() {\n    // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n    // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const {ownerDocument} = thisNode;\n      removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n      removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\n      removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n      removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n      if (this.props.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\n    }\n  }\n\n  handleDragStart: EventHandler<MouseTouchEvent> = (e) => {\n    // Make it possible to attach event handlers on top of this one.\n    this.props.onMouseDown(e);\n\n    // Only accept left-clicks.\n    if (!this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n    // Get nodes. Be sure to grab relative document (could be iframed)\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n      throw new Error('<DraggableCore> not mounted on DragStart!');\n    }\n    const {ownerDocument} = thisNode;\n\n    // Short circuit if handle or cancel prop was provided and selector doesn't match.\n    if (this.props.disabled ||\n      (!(e.target instanceof ownerDocument.defaultView.Node)) ||\n      (this.props.handle && !matchesSelectorAndParentsTo(e.target, this.props.handle, thisNode)) ||\n      (this.props.cancel && matchesSelectorAndParentsTo(e.target, this.props.cancel, thisNode))) {\n      return;\n    }\n\n    // Set touch identifier in component state if this is a touch event. This allows us to\n    // distinguish between individual touches on multitouch screens by identifying which\n    // touchpoint was set to this element.\n    const touchIdentifier = getTouchIdentifier(e);\n    this.setState({touchIdentifier});\n\n    // Get the current drag point from the event. This is used as the offset.\n    const position = getControlPosition(e, touchIdentifier, this);\n    if (position == null) return; // not possible but satisfies flow\n    const {x, y} = position;\n\n    // Create an event object with all the data parents need to make a decision here.\n    const coreEvent = createCoreData(this, x, y);\n\n    log('DraggableCore: handleDragStart: %j', coreEvent);\n\n    // Call event handler. If it returns explicit false, cancel.\n    log('calling', this.props.onStart);\n    const shouldUpdate = this.props.onStart(e, coreEvent);\n    if (shouldUpdate === false) return;\n\n    // Add a style to the body to disable user-select. This prevents text from\n    // being selected all over the page.\n    if (this.props.enableUserSelectHack) addUserSelectStyles(ownerDocument);\n\n    // Initiate dragging. Set the current x and y as offsets\n    // so we know how much we've moved during the drag. This allows us\n    // to drag elements around even if they have been moved, without issue.\n    this.setState({\n      dragging: true,\n\n      lastX: x,\n      lastY: y\n    });\n\n    // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n    // this element. We use different events depending on whether or not we have detected that this\n    // is a touch-capable device.\n    addEvent(ownerDocument, dragEventFor.move, this.handleDrag);\n    addEvent(ownerDocument, dragEventFor.stop, this.handleDragStop);\n  };\n\n  handleDrag: EventHandler<MouseTouchEvent> = (e) => {\n\n    // Prevent scrolling on mobile devices, like ipad/iphone.\n    if (e.type === 'touchmove') e.preventDefault();\n\n    // Get the current drag point from the event. This is used as the offset.\n    const position = getControlPosition(e, this.state.touchIdentifier, this);\n    if (position == null) return;\n    let {x, y} = position;\n\n    // Snap to grid if prop has been provided\n    if (Array.isArray(this.props.grid)) {\n      let deltaX = x - this.state.lastX, deltaY = y - this.state.lastY;\n      [deltaX, deltaY] = snapToGrid(this.props.grid, deltaX, deltaY);\n      if (!deltaX && !deltaY) return; // skip useless drag\n      x = this.state.lastX + deltaX, y = this.state.lastY + deltaY;\n    }\n\n    const coreEvent = createCoreData(this, x, y);\n\n    log('DraggableCore: handleDrag: %j', coreEvent);\n\n    // Call event handler. If it returns explicit false, trigger end.\n    const shouldUpdate = this.props.onDrag(e, coreEvent);\n    if (shouldUpdate === false) {\n      try {\n        // $FlowIgnore\n        this.handleDragStop(new MouseEvent('mouseup'));\n      } catch (err) {\n        // Old browsers\n        const event = ((document.createEvent('MouseEvents'): any): MouseTouchEvent);\n        // I see why this insanity was deprecated\n        // $FlowIgnore\n        event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        this.handleDragStop(event);\n      }\n      return;\n    }\n\n    this.setState({\n      lastX: x,\n      lastY: y\n    });\n  };\n\n  handleDragStop: EventHandler<MouseTouchEvent> = (e) => {\n    if (!this.state.dragging) return;\n\n    const position = getControlPosition(e, this.state.touchIdentifier, this);\n    if (position == null) return;\n    const {x, y} = position;\n    const coreEvent = createCoreData(this, x, y);\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      // Remove user-select hack\n      if (this.props.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\n    }\n\n    log('DraggableCore: handleDragStop: %j', coreEvent);\n\n    // Reset the el.\n    this.setState({\n      dragging: false,\n      lastX: NaN,\n      lastY: NaN\n    });\n\n    // Call event handler\n    this.props.onStop(e, coreEvent);\n\n    if (thisNode) {\n      // Remove event handlers\n      log('DraggableCore: Removing handlers');\n      removeEvent(thisNode.ownerDocument, dragEventFor.move, this.handleDrag);\n      removeEvent(thisNode.ownerDocument, dragEventFor.stop, this.handleDragStop);\n    }\n  };\n\n  onMouseDown: EventHandler<MouseTouchEvent> = (e) => {\n    dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n    return this.handleDragStart(e);\n  };\n\n  onMouseUp: EventHandler<MouseTouchEvent> = (e) => {\n    dragEventFor = eventsFor.mouse;\n\n    return this.handleDragStop(e);\n  };\n\n  // Same as onMouseDown (start drag), but now consider this a touch device.\n  onTouchStart: EventHandler<MouseTouchEvent> = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStart(e);\n  };\n\n  onTouchEnd: EventHandler<MouseTouchEvent> = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStop(e);\n  };\n\n  render() {\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return React.cloneElement(React.Children.only(this.props.children), {\n      style: styleHacks(this.props.children.props.style),\n\n      // Note: mouseMove handler is attached to document so it will still function\n      // when the user drags quickly and leaves the bounds of the element.\n      onMouseDown: this.onMouseDown,\n      onTouchStart: this.onTouchStart,\n      onMouseUp: this.onMouseUp,\n      onTouchEnd: this.onTouchEnd\n    });\n  }\n}\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n","import ResizeObserver from 'resize-observer-polyfill';\n\nimport type Draggable from '../Draggable';\nimport { getBoundPosition } from './positionFns';\n\nexport default class BoundsObserver {\n  boundElement: HTMLElement;\n\n  constructor(draggable: Draggable) {\n    this.ro = new ResizeObserver(() => {\n      const [x, y] = getBoundPosition(draggable, draggable.state.x, draggable.state.y, draggable.bounds);\n      draggable.setState({ x, y });\n    });\n  }\n\n  addBoundElementListener(e: HTMLElement) {\n    if (this.boundElement) {\n      this.ro.unobserve(this.boundElement);\n    }\n    this.boundElement = e;\n    this.ro.observe(this.boundElement);\n  }\n\n  removeBoundElementListener() {\n    this.ro.unobserve(this.boundElement);\n    this.boundElement = undefined;\n  }\n}","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport {createCSSTransform, createSVGTransform} from './utils/domFns';\nimport {canDragX, canDragY, createDraggableData, getBoundPosition} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport DraggableCore from './DraggableCore';\nimport type {ControlPosition, DraggableBounds, DraggableCoreProps} from './DraggableCore';\nimport log from './utils/log';\nimport type {DraggableEventHandler} from './utils/types';\nimport type {Element as ReactElement} from 'react';\nimport BoundsObserver from './utils/boundsObserver';\nimport { boundsChanged, positionChanged } from './utils/propChangeDetection';\n\ntype DraggableState = {\n  dragging: boolean,\n  dragged: boolean,\n  x: number, y: number,\n  slackX: number, slackY: number,\n  isElementSVG: boolean\n};\n\nexport type DraggableProps = {\n  ...$Exact<DraggableCoreProps>,\n  axis: 'both' | 'x' | 'y' | 'none',\n  bounds: DraggableBounds | string | false,\n  defaultClassName: string,\n  defaultClassNameDragging: string,\n  defaultClassNameDragged: string,\n  defaultPosition: ControlPosition,\n  position: ControlPosition,\n  scale: number\n};\n\n//\n// Define <Draggable>\n//\n\nexport default class Draggable extends React.Component<DraggableProps, DraggableState> {\n  boundsObserver: BoundsObserver;\n\n  static displayName = 'Draggable';\n\n  static propTypes = {\n    // Accepts all props <DraggableCore> accepts.\n    ...DraggableCore.propTypes,\n\n    /**\n     * `axis` determines which axis the draggable can move.\n     *\n     *  Note that all callbacks will still return data as normal. This only\n     *  controls flushing to the DOM.\n     *\n     * 'both' allows movement horizontally and vertically.\n     * 'x' limits movement to horizontal axis.\n     * 'y' limits movement to vertical axis.\n     * 'none' limits all movement.\n     *\n     * Defaults to 'both'.\n     */\n    axis: PropTypes.oneOf(['both', 'x', 'y', 'none']),\n\n    /**\n     * `bounds` determines the range of movement available to the element.\n     * Available values are:\n     *\n     * 'parent' restricts movement within the Draggable's parent node.\n     *\n     * Alternatively, pass an object with the following properties, all of which are optional:\n     *\n     * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n     *\n     * All values are in px.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable bounds={{right: 300, bottom: 300}}>\n     *              <div>Content</div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    bounds: PropTypes.oneOfType([\n      PropTypes.shape({\n        left: PropTypes.number,\n        right: PropTypes.number,\n        top: PropTypes.number,\n        bottom: PropTypes.number\n      }),\n      PropTypes.string,\n      PropTypes.oneOf([false])\n    ]),\n\n    defaultClassName: PropTypes.string,\n    defaultClassNameDragging: PropTypes.string,\n    defaultClassNameDragged: PropTypes.string,\n\n    /**\n     * `defaultPosition` specifies the x and y that the dragged item should start at\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    defaultPosition: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    }),\n\n    /**\n     * `position`, if present, defines the current position of the element.\n     *\n     *  This is similar to how form elements in React work - if no `position` is supplied, the component\n     *  is uncontrolled.\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable position={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    position: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    }),\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    ...DraggableCore.defaultProps,\n    axis: 'both',\n    bounds: false,\n    defaultClassName: 'react-draggable',\n    defaultClassNameDragging: 'react-draggable-dragging',\n    defaultClassNameDragged: 'react-draggable-dragged',\n    defaultPosition: {x: 0, y: 0},\n    position: null,\n    scale: 1\n  };\n\n  constructor(props: DraggableProps) {\n    super(props);\n\n    this.state = {\n      // Whether or not we are currently dragging.\n      dragging: false,\n\n      // Whether or not we have been dragged before.\n      dragged: false,\n\n      // Current transform x and y.\n      x: props.position ? props.position.x : props.defaultPosition.x,\n      y: props.position ? props.position.y : props.defaultPosition.y,\n\n      // Used for compensating for out-of-bounds drags\n      slackX: 0, slackY: 0,\n\n      // Can only determine if SVG after mounting\n      isElementSVG: false\n    };\n\n    this.boundsObserver = new BoundsObserver(this);\n  }\n\n  componentWillMount() {\n    if (this.props.position && !(this.props.onDrag || this.props.onStop)) {\n      // eslint-disable-next-line\n      console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' +\n        'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' +\n        '`position` of this element.');\n    }\n  }\n\n  componentDidMount() {\n    // Check to see if the element passed is an instanceof SVGElement\n    if(typeof window.SVGElement !== 'undefined' && ReactDOM.findDOMNode(this) instanceof window.SVGElement) {\n      this.setState({ isElementSVG: true });\n    }\n  }\n\n  \n\n  componentWillReceiveProps(nextProps: Object) {\n\n    if (boundsChanged(this.props.bounds, nextProps.bounds)) {\n      // bounds changed\n      const { x, y } = nextProps.position || this.state;\n      const [newStateX, newStateY] = getBoundPosition(this, x, y, nextProps.bounds);\n      if (x !== newStateX || y !== newStateY) {\n        this.setState({ x: newStateX, y: newStateY });\n      }\n    } else if (positionChanged(this.props.position, nextProps.position)) {\n      // position changed\n      this.setState({ x: nextProps.position.x, y: nextProps.position.y });\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({dragging: false}); // prevents invariant if unmounted while dragging\n    // cleanup if bounds observer is listening\n    if (this.boundsObserver.boundElement) this.boundsObserver.removeBoundElementListener();\n  }\n\n  onDragStart: DraggableEventHandler = (e, coreData) => {\n    log('Draggable: onDragStart: %j', coreData);\n\n    // Short-circuit if user's callback killed it.\n    const shouldStart = this.props.onStart(e, createDraggableData(this, coreData));\n    // Kills start event on core as well, so move handlers are never bound.\n    if (shouldStart === false) return false;\n\n    this.setState({dragging: true, dragged: true});\n  };\n\n  onDrag: DraggableEventHandler = (e, coreData) => {\n    if (!this.state.dragging) return false;\n    log('Draggable: onDrag: %j', coreData);\n\n    const uiData = createDraggableData(this, coreData);\n\n    const newState: $Shape<DraggableState> = {\n      x: uiData.x,\n      y: uiData.y\n    };\n\n    // Keep within bounds.\n    if (this.props.bounds) {\n      // Save original x and y.\n      const {x, y} = newState;\n\n      // Add slack to the values used to calculate bound position. This will ensure that if\n      // we start removing slack, the element won't react to it right away until it's been\n      // completely removed.\n      newState.x += this.state.slackX;\n      newState.y += this.state.slackY;\n\n      // Get bound position. This will ceil/floor the x and y within the boundaries.\n      const [newStateX, newStateY] = getBoundPosition(this, newState.x, newState.y, this.props.bounds);\n      newState.x = newStateX;\n      newState.y = newStateY;\n\n      // Recalculate slack by noting how much was shaved by the boundPosition handler.\n      newState.slackX = this.state.slackX + (x - newState.x);\n      newState.slackY = this.state.slackY + (y - newState.y);\n\n      // Update the event we fire to reflect what really happened after bounds took effect.\n      uiData.x = newState.x;\n      uiData.y = newState.y;\n      uiData.deltaX = newState.x - this.state.x;\n      uiData.deltaY = newState.y - this.state.y;\n    }\n\n    // Short-circuit if user's callback killed it.\n    const shouldUpdate = this.props.onDrag(e, uiData);\n    if (shouldUpdate === false) return false;\n\n    this.setState(newState);\n  };\n\n  onDragStop: DraggableEventHandler = (e, coreData) => {\n    if (!this.state.dragging) return false;\n\n    // Short-circuit if user's callback killed it.\n    const shouldStop = this.props.onStop(e, createDraggableData(this, coreData));\n    if (shouldStop === false) return false;\n\n    log('Draggable: onDragStop: %j', coreData);\n\n    const newState: $Shape<DraggableState> = {\n      dragging: false,\n      slackX: 0,\n      slackY: 0\n    };\n\n    // If this is a controlled component, the result of this operation will be to\n    // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n    const controlled = Boolean(this.props.position);\n    if (controlled) {\n      const {x, y} = this.props.position;\n      newState.x = x;\n      newState.y = y;\n    }\n\n    this.setState(newState);\n  };\n\n  render(): ReactElement<any> {\n    let style = {}, svgTransform = null;\n\n    // If this is controlled, we don't want to move it - unless it's dragging.\n    const controlled = Boolean(this.props.position);\n    const draggable = !controlled || this.state.dragging;\n\n    const position = this.props.position || this.props.defaultPosition;\n    const transformOpts = {\n      // Set left if horizontal drag is enabled\n      x: canDragX(this) && draggable ?\n        this.state.x :\n        position.x,\n\n      // Set top if vertical drag is enabled\n      y: canDragY(this) && draggable ?\n        this.state.y :\n        position.y\n    };\n\n    // If this element was SVG, we use the `transform` attribute.\n    if (this.state.isElementSVG) {\n      svgTransform = createSVGTransform(transformOpts);\n    } else {\n      // Add a CSS transform to move the element around. This allows us to move the element around\n      // without worrying about whether or not it is relatively or absolutely positioned.\n      // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n      // has a clean slate.\n      style = createCSSTransform(transformOpts);\n    }\n\n    const {\n      defaultClassName,\n      defaultClassNameDragging,\n      defaultClassNameDragged\n    } = this.props;\n\n    const children = React.Children.only(this.props.children);\n\n    // Mark with class while dragging\n    const className = classNames((children.props.className || ''), defaultClassName, {\n      [defaultClassNameDragging]: this.state.dragging,\n      [defaultClassNameDragged]: this.state.dragged\n    });\n\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return (\n      <DraggableCore {...this.props} onStart={this.onDragStart} onDrag={this.onDrag} onStop={this.onDragStop}>\n        {React.cloneElement(children, {\n          className: className,\n          style: {...children.props.style, ...style},\n          transform: svgTransform\n        })}\n      </DraggableCore>\n    );\n  }\n}\n","export const boundsChanged = (currentBounds, nextBounds) => {\n  if (currentBounds !== nextBounds) return true;\n  else if (typeof nextBounds === 'object' && typeof currentBounds === 'object') {\n    return Object.keys(currentBounds).length !== Object.keys(nextBounds).length\n    || Object.keys(nextBounds).some(k => nextBounds[k] !== currentBounds[k]);\n  }\n  return false;\n};\n\nexport const positionChanged = (currentPosition, nextPosition) => {\n  if (!currentPosition && nextPosition) return true;\n  else if ((currentPosition && currentPosition.x) !== (nextPosition && nextPosition.x)) return true;\n  else if ((currentPosition && currentPosition.y) !== (nextPosition && nextPosition.y)) return true;\n  return false;\n};","import Draggable from './Draggable';\nimport DraggableCore from './DraggableCore';\n\n// Previous versions of this lib exported <Draggable> as the root export. As to not break\n// them, or TypeScript, we export *both* as the root and as 'default'.\n// See https://github.com/mzabriskie/react-draggable/pull/254\n// and https://github.com/mzabriskie/react-draggable/issues/266\nDraggable.default = Draggable;\nDraggable.DraggableCore = DraggableCore;\n\nexport default Draggable;\n"],"names":["getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","emptyFunction","module","shim","props","propName","componentName","location","propFullName","secret","ReactPropTypesSecret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$1","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","exports","default","window","findInArray","callback","isFunction","toString","isNum","num","isNaN","int","a","parseInt","dontSetMe","prefixes","browserPrefixToKey","prop","prefix","str","out","shouldCapitalize","toUpperCase","kebabToTitleCase","document","style","documentElement","getPrefix","matchesSelectorFunc","matchesSelector","el","selector","method","matchesSelectorAndParentsTo","baseNode","parentNode","addEvent","event","handler","attachEvent","addEventListener","removeEvent","detachEvent","removeEventListener","addUserSelectStyles","doc","className","styleEl","getElementById","createElement","type","id","innerHTML","getElementsByTagName","appendChild","body","classList","add","match","RegExp","removeUserSelectStyles","remove","replace","selection","empty","getSelection","removeAllRanges","e","getBoundPosition","draggable","x","y","bounds","left","top","right","bottom","cloneBounds","findDOMNode","ownerDocument","ownerWindow","defaultView","boundNode","querySelector","HTMLElement","boundsObserver","addBoundElementListener","nodeStyle","getComputedStyle","boundNodeStyle","offsetLeft","paddingLeft","marginLeft","offsetTop","paddingTop","marginTop","width","clientWidth","computedStyle","paddingRight","innerWidth","borderLeftWidth","borderRightWidth","outerWidth","marginRight","height","clientHeight","paddingBottom","innerHeight","borderTopWidth","borderBottomWidth","outerHeight","marginBottom","Math","min","max","getControlPosition","touchIdentifier","draggableCore","touchObj","identifier","targetTouches","t","changedTouches","getTouch","offsetParent","evt","offsetParentRect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","offsetXYFromParent","createCoreData","state","isStart","lastX","deltaY","lastY","createDraggableData","coreData","scale","deltaX","ReactDOM","eventsFor","dragEventFor","mouse","DraggableCore","NaN","handleDragStart","onMouseDown","_this","allowAnyClick","button","thisNode","disabled","target","Node","handle","cancel","getTouchIdentifier","setState","position","coreEvent","onStart","enableUserSelectHack","move","handleDrag","stop","handleDragStop","preventDefault","grid","pendingX","pendingY","round","onDrag","MouseEvent","createEvent","initMouseEvent","dragging","onStop","onMouseUp","onTouchStart","touch","onTouchEnd","this","React","cloneElement","Children","only","children","childStyle","styleHacks","Component","displayName","propTypes","nodeType","defaultProps","MapShim","Map","getIndex","arr","result","some","entry","index","anonymous","__entries__","prototypeAccessors","size","configurable","get","set","value","delete","entries","splice","has","clear","ctx","list","defineProperties","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","observe","attributes","childList","characterData","subtree","disconnect","ref","propertyName","getInstance","instance_","defineConfigurable","defineProperty","enumerable","writable","getWindowOf","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","len","reduce","getHTMLElementContentRect","paddings","getPaddings","horizPad","vertPad","boxSizing","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","WeakMap","ResizeObserver","BoundsObserver","ro","boundElement","undefined","Draggable","onDragStart","dragged","uiData","newState","slackX","slackY","newStateX","newStateY","onDragStop","Boolean","defaultPosition","warn","isElementSVG","nextProps","currentBounds","nextBounds","k","currentPosition","nextPosition","removeBoundElementListener","svgTransform","transformOpts","axis","canDragX","canDragY","browserPrefix","defaultClassName","defaultClassNameDragging","defaultClassNameDragged"],"mappings":"iaAQA,IAAIA,EAAwBC,OAAOD,sBAC/BE,EAAiBD,OAAOE,UAAUD,eAClCE,EAAmBH,OAAOE,UAAUE,sBAUxC,WACC,IACC,IAAKJ,OAAOK,OACX,OAAO,EAMR,IAAIC,EAAQ,IAAIC,OAAO,OAEvB,GADAD,EAAM,GAAK,KACkC,MAAzCN,OAAOQ,oBAAoBF,GAAO,GACrC,OAAO,EAKR,IADA,IAAIG,KACKC,EAAI,EAAGA,EAAI,GAAIA,IACvBD,EAAM,IAAMF,OAAOI,aAAaD,IAAMA,EAKvC,GAAwB,eAHXV,OAAOQ,oBAAoBC,GAAOG,IAAI,SAAUC,GAC5D,OAAOJ,EAAMI,KAEHC,KAAK,IACf,OAAO,EAIR,IAAIC,KAIJ,MAHA,uBAAuBC,MAAM,IAAIC,QAAQ,SAAUC,GAClDH,EAAMG,GAAUA,IAGf,yBADElB,OAAOmB,KAAKnB,OAAOK,UAAWU,IAAQD,KAAK,IAM9C,MAAOM,GAER,OAAO,IAIQC,IAAoBrB,OAAOK,OAA5C,MCvD2B,+CCE3B,SAASiB,KAET,oBCaEC,UDbe,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWC,EAAf,CAIA,IAAIX,EAAM,IAAIY,MACZ,mLAKF,MADAZ,EAAIa,KAAO,sBACLb,GAGR,SAASc,IACP,OAAOV,EAFTA,EAAKW,WAAaX,EAMlB,IAAIY,GACFC,MAAOb,EACPc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASX,EACTY,QAAStB,EACTuB,WAAYb,EACZc,KAAMxB,EACNyB,SAAUf,EACVgB,MAAOhB,EACPiB,UAAWjB,EACXkB,MAAOlB,EACPmB,MAAOnB,GAMT,OAHAE,EAAekB,eAAiBhC,EAChCc,EAAemB,UAAYnB,EAEpBA,EC/BUoB,sBCnBlB,WAGA,IAAIC,KAAYxD,eAEhB,SAASyD,IAGR,IAFA,IAAIC,KAEKjD,EAAI,EAAGA,EAAIkD,UAAUC,OAAQnD,IAAK,CAC1C,IAAIoD,EAAMF,UAAUlD,GACpB,GAAKoD,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BJ,EAAQK,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQT,EAAWU,MAAM,KAAMN,GAC/BK,GACHR,EAAQK,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIM,KAAOP,EACXL,EAAOa,KAAKR,EAAKO,IAAQP,EAAIO,IAChCV,EAAQK,KAAKK,IAMjB,OAAOV,EAAQ7C,KAAK,KAGgBS,EAAOgD,SAC3Cb,EAAWc,QAAUd,EACrBnC,UAAiBmC,GAOjBe,OAAOf,WAAaA,EA1CtB,KCLO,SAASgB,EAAYrC,EAA+BsC,OACpD,IAAIjE,EAAI,EAAGmD,EAASxB,EAAMwB,OAAQnD,EAAImD,EAAQnD,OAC7CiE,EAASP,MAAMO,GAAWtC,EAAM3B,GAAIA,EAAG2B,IAAS,OAAOA,EAAM3B,GAI9D,SAASkE,EAAWrC,SACF,mBAATA,GAAgE,sBAAzCvC,OAAOE,UAAU2E,SAASP,KAAK/B,GAG/D,SAASuC,EAAMC,SACE,iBAARA,IAAqBC,MAAMD,GAGpC,SAASE,EAAIC,UACXC,SAASD,EAAG,IAGd,SAASE,EAAU3D,EAAeC,EAAkBC,MACrDF,EAAMC,UACD,IAAIM,sBAAsBN,gBAAsBC,8CCrB3D,IAAM0D,GAAY,MAAO,SAAU,IAAK,MAkBjC,SAASC,EAAmBC,EAAcC,UACxCA,KAAYA,EAOrB,SAA0BC,WACpBC,EAAM,GACNC,GAAmB,EACdjF,EAAI,EAAGA,EAAI+E,EAAI5B,OAAQnD,IAC1BiF,MACKF,EAAI/E,GAAGkF,iBACK,GACC,MAAXH,EAAI/E,MACM,KAEZ+E,EAAI/E,UAGRgF,EApBqBG,CAAiBN,GAAUA,QAlBlD,eAAmBA,yDAAa,eAIf,oBAAXd,aAAqD,IAApBA,OAAOqB,SAA0B,MAAO,OAE9EC,EAAQtB,OAAOqB,SAASE,gBAAgBD,SAE1CR,KAAQQ,EAAO,MAAO,OAErB,IAAIrF,EAAI,EAAGA,EAAI2E,EAASxB,OAAQnD,OAC/B4E,EAAmBC,EAAMF,EAAS3E,MAAOqF,EAAO,OAAOV,EAAS3E,SAG/D,GA8BMuF,msDCxCXC,EAAsB,GACnB,SAASC,EAAgBC,EAAUC,UACnCH,MACmBxB,GACpB,UACA,wBACA,qBACA,oBACA,oBACC,SAAS4B,UAEH1B,EAAWwB,EAAGE,SAMpB1B,EAAWwB,EAAGF,KAGZE,EAAGF,GAAqBG,GAI1B,SAASE,EAA4BH,EAAUC,EAAkBG,OAClExD,EAAOoD,IACR,IACGD,EAAgBnD,EAAMqD,GAAW,OAAO,KACxCrD,IAASwD,EAAU,OAAO,IACvBxD,EAAKyD,iBACLzD,UAEF,EAGF,SAAS0D,EAASN,EAAWO,EAAeC,GAC5CR,IACDA,EAAGS,cACFA,YAAY,KAAOF,EAAOC,GACpBR,EAAGU,mBACTA,iBAAiBH,EAAOC,GAAS,KAGjC,KAAOD,GAASC,GAIhB,SAASG,EAAYX,EAAWO,EAAeC,GAC/CR,IACDA,EAAGY,cACFA,YAAY,KAAOL,EAAOC,GACpBR,EAAGa,sBACTA,oBAAoBN,EAAOC,GAAS,KAGpC,KAAOD,GAAS,MA0EhB,SAASO,EAAoBC,MAC7BA,OAqCsBf,EAAiBgB,EApCxCC,EAAUF,EAAIG,eAAe,4BAC5BD,OACOF,EAAII,cAAc,UACpBC,KAAO,aACPC,GAAK,6BACLC,UAAY,0FACZA,WAAa,qFACjBC,qBAAqB,QAAQ,GAAGC,YAAYP,IAE9CF,EAAIU,OA2BmBzB,EA3BAe,EAAIU,KA2BaT,EA3BP,wCA4BjChB,EAAG0B,YACFA,UAAUC,IAAIX,GAEZhB,EAAGgB,UAAUY,MAAM,IAAIC,mBAAmBb,kBAC1CA,eAAiBA,KA7BnB,SAASc,EAAuBf,OAE/BA,GAAOA,EAAIU,OAgCazB,EAhCSe,EAAIU,KAgCIT,EAhCE,wCAiC7ChB,EAAG0B,YACFA,UAAUK,OAAOf,KAEjBA,UAAYhB,EAAGgB,UAAUgB,QAAQ,IAAIH,mBAAmBb,YAAoB,KAAM,KAlCjFD,EAAIkB,YAEFA,UAAUC,eAEPC,eAAeC,kBAExB,MAAOC,IAwBJ,IAAyBrC,EAAiBgB,EC9K1C,SAASsB,EACdC,EACAC,EACAC,OACAC,yDAA4BH,EAAUlH,MAAMqH,WAGvCA,EAAQ,OAAQF,EAAGC,KAGG,iBAAXC,EAAsBA,EA2GxC,SAAqBA,eAEXA,EAAOC,SACRD,EAAOE,UACLF,EAAOG,aACNH,EAAOI,QAhH8BC,CAAYL,OACrD9F,EAAOoG,EAAYT,MAEH,iBAAXG,EAAqB,KACvBO,EAAiBrG,EAAjBqG,cACDC,EAAcD,EAAcE,YAC9BC,iBACW,WAAXV,EACU9F,EAAKyD,WAEL4C,EAAcI,cAAcX,cAGfY,mBACnB,IAAI1H,MAAM,oBAAsB8G,EAAS,kCAGvCa,eAAeC,wBAAwBJ,OAE3CK,EAAYP,EAAYQ,iBAAiB9G,GACzC+G,EAAiBT,EAAYQ,iBAAiBN,YAG3CxG,EAAKgH,WAAa/E,EAAI8E,EAAeE,aAAehF,EAAI4E,EAAUK,iBACnElH,EAAKmH,UAAYlF,EAAI8E,EAAeK,YAAcnF,EAAI4E,EAAUQ,iBDiDrE,SAAoBrH,OACrBsH,EAAQtH,EAAKuH,YACXC,EAAgBxH,EAAKqG,cAAcE,YAAYO,iBAAiB9G,aAC7DiC,EAAIuF,EAAcP,gBAClBhF,EAAIuF,EAAcC,cCpDhBC,CAAWlB,GD+BjB,SAAoBxG,OAGrBsH,EAAQtH,EAAKuH,YACXC,EAAgBxH,EAAKqG,cAAcE,YAAYO,iBAAiB9G,aAC7DiC,EAAIuF,EAAcG,oBAClB1F,EAAIuF,EAAcI,kBCrCQC,CAAW7H,GAAQA,EAAKgH,WACrD/E,EAAI8E,EAAeU,cAAgBxF,EAAI4E,EAAUiB,oBDuClD,SAAqB9H,OACtB+H,EAAS/H,EAAKgI,aACZR,EAAgBxH,EAAKqG,cAAcE,YAAYO,iBAAiB9G,aAC5DiC,EAAIuF,EAAcJ,eAClBnF,EAAIuF,EAAcS,eC1ChBC,CAAY1B,GDmBnB,SAAqBxG,OAGtB+H,EAAS/H,EAAKgI,aACZR,EAAgBxH,EAAKqG,cAAcE,YAAYO,iBAAiB9G,aAC5DiC,EAAIuF,EAAcW,mBAClBlG,EAAIuF,EAAcY,mBCzBSC,CAAYrI,GAAQA,EAAKmH,UACxDlF,EAAI8E,EAAekB,eAAiBhG,EAAI4E,EAAUyB,sBAKpDxG,EAAMgE,EAAOG,SAAQL,EAAI2C,KAAKC,IAAI5C,EAAGE,EAAOG,QAC5CnE,EAAMgE,EAAOI,UAASL,EAAI0C,KAAKC,IAAI3C,EAAGC,EAAOI,SAG7CpE,EAAMgE,EAAOC,QAAOH,EAAI2C,KAAKE,IAAI7C,EAAGE,EAAOC,OAC3CjE,EAAMgE,EAAOE,OAAMH,EAAI0C,KAAKE,IAAI5C,EAAGC,EAAOE,OAEtCJ,EAAGC,GAkBN,SAAS6C,EAAmBjD,EAAoBkD,EAA0BC,OACzEC,EAAsC,iBAApBF,ED0CnB,SAAkBlD,EAAoBqD,UACnCrD,EAAEsD,eAAiBrH,EAAY+D,EAAEsD,cAAe,mBAAKD,IAAeE,EAAEF,cACtErD,EAAEwD,gBAAkBvH,EAAY+D,EAAEwD,eAAgB,mBAAKH,IAAeE,EAAEF,aC5CzBI,CAASzD,EAAGkD,GAAmB,QACvD,iBAApBA,IAAiCE,EAAU,OAAO,SACvD7I,EAAOoG,EAAYwC,GAEnBO,EAAeP,EAAcnK,MAAM0K,cAAgBnJ,EAAKmJ,cAAgBnJ,EAAKqG,cAAcxB,YDmB5F,SAA4BuE,EAAyCD,OAEpEE,EADSF,IAAiBA,EAAa9C,cAAcxB,MACxBkB,KAAM,EAAGC,IAAK,GAAKmD,EAAaG,+BAK3D1D,EAHEwD,EAAIG,QAAUJ,EAAaK,WAAaH,EAAiBtD,KAGxDF,EAFDuD,EAAIK,QAAUN,EAAaO,UAAYL,EAAiBrD,KCvB3D2D,CAAmBd,GAAYpD,EAAG0D,GAIpC,SAASS,EAAejE,EAA0BC,EAAWC,OAC5DgE,EAAQlE,EAAUkE,MAClBC,GAAWhI,EAAM+H,EAAME,OACvB/J,EAAOoG,EAAYT,UAErBmE,iBAIQ,EAAGE,OAAQ,QACZpE,EAAGqE,MAAOpE,MACdA,oBAMKD,EAAIiE,EAAME,MAAOC,OAAQnE,EAAIgE,EAAMI,YACpCJ,EAAME,MAAOE,MAAOJ,EAAMI,UAC9BpE,KAMF,SAASqE,EAAoBvE,EAAsBwE,OAClDC,EAAQzE,EAAUlH,MAAM2L,kBAEtBD,EAASnK,OACZ2F,EAAUkE,MAAMjE,EAAKuE,EAASE,OAASD,IACvCzE,EAAUkE,MAAMhE,EAAKsE,EAASH,OAASI,SACjCD,EAASE,OAASD,SAClBD,EAASH,OAASI,QACpBzE,EAAUkE,MAAMjE,QAChBD,EAAUkE,MAAMhE,GAc3B,SAASO,EAAYT,OACb3F,EAAOsK,EAASlE,YAAYT,OAC7B3F,QACG,IAAIhB,MAAM,mDAGXgB,EC/HT,IAAMuK,gBAEK,kBACD,iBACA,yBAGC,iBACD,iBACA,YAKNC,EAAeD,EAAUE,MAiDRC,iNA0InBb,iBACY,QAEHc,IAAKV,MAAOU,oBACF,QAiBnBC,gBAAiD,SAACnF,QAE3ChH,MAAMoM,YAAYpF,IAGlBqF,EAAKrM,MAAMsM,eAAqC,iBAAbtF,EAAEuF,QAAoC,IAAbvF,EAAEuF,OAAc,OAAO,MAGlFC,EAAWX,EAASlE,mBACrB6E,IAAaA,EAAS5E,gBAAkB4E,EAAS5E,cAAcxB,WAC5D,IAAI7F,MAAM,iDAEXqH,EAAiB4E,EAAjB5E,mBAGHyE,EAAKrM,MAAMyM,YACVzF,EAAE0F,kBAAkB9E,EAAcE,YAAY6E,OAChDN,EAAKrM,MAAM4M,SAAW9H,EAA4BkC,EAAE0F,OAAQL,EAAKrM,MAAM4M,OAAQJ,IAC/EH,EAAKrM,MAAM6M,QAAU/H,EAA4BkC,EAAE0F,OAAQL,EAAKrM,MAAM6M,OAAQL,SAO3EtC,EFxIH,SAA4BlD,UAC7BA,EAAEsD,eAAiBtD,EAAEsD,cAAc,GAAWtD,EAAEsD,cAAc,GAAGD,WACjErD,EAAEwD,gBAAkBxD,EAAEwD,eAAe,GAAWxD,EAAEwD,eAAe,GAAGH,kBEsI9CyC,CAAmB9F,KACtC+F,UAAU7C,wBAGT8C,EAAW/C,EAAmBjD,EAAGkD,QACvB,MAAZ8C,OACG7F,EAAQ6F,EAAR7F,EAAGC,EAAK4F,EAAL5F,EAGJ6F,EAAY9B,IAAqBhE,EAAGC,GAK3BiF,EAAKrM,MAAMkN,SAEL,IADAb,EAAKrM,MAAMkN,QAAQlG,EAAGiG,KAKvCZ,EAAKrM,MAAMmN,sBAAsB1H,EAAoBmC,KAKpDmF,oBACO,QAEH5F,QACAC,MAMAQ,EAAemE,EAAaqB,KAAMf,EAAKgB,cACvCzF,EAAemE,EAAauB,KAAMjB,EAAKkB,sBAGlDF,WAA4C,SAACrG,GAG5B,cAAXA,EAAEjB,MAAsBiB,EAAEwG,qBAGxBR,EAAW/C,EAAmBjD,EAAGqF,EAAKjB,MAAMlB,sBAClC,MAAZ8C,ODrPmBS,EAAwBC,EAAkBC,ECsP5DxG,EAAQ6F,EAAR7F,EAAGC,EAAK4F,EAAL5F,KAGJ5E,MAAMC,QAAQ4J,EAAKrM,MAAMyN,MAAO,KAC9B7B,EAASzE,EAAIkF,EAAKjB,MAAME,MAAOC,EAASnE,EAAIiF,EAAKjB,MAAMI,SD1PtCiC,EC2PSpB,EAAKrM,MAAMyN,KD3PIC,EC2PE9B,ED3PgB+B,EC2PRpC,GD1PjDzB,KAAK8D,MAAMF,EAAWD,EAAK,IAAMA,EAAK,GACtC3D,KAAK8D,MAAMD,EAAWF,EAAK,IAAMA,EAAK,gCC0PvC7B,IAAWL,EAAQ,SACpBc,EAAKjB,MAAME,MAAQM,EAAQxE,EAAIiF,EAAKjB,MAAMI,MAAQD,MAGlD0B,EAAY9B,IAAqBhE,EAAGC,OAMrB,IADAiF,EAAKrM,MAAM6N,OAAO7G,EAAGiG,KAgBrCF,gBACI5F,QACAC,eAdAmG,eAAe,IAAIO,WAAW,YACnC,MAAOnO,OAEDuF,EAAUb,SAAS0J,YAAY,iBAG/BC,eAAe,WAAW,GAAM,EAAMhL,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAG,GAAO,GAAO,GAAO,EAAO,EAAG,QAC7FuK,eAAerI,QAW1BqI,eAAgD,SAACvG,MAC1CqF,EAAKjB,MAAM6C,cAEVjB,EAAW/C,EAAmBjD,EAAGqF,EAAKjB,MAAMlB,sBAClC,MAAZ8C,OACG7F,EAAQ6F,EAAR7F,EAAGC,EAAK4F,EAAL5F,EACJ6F,EAAY9B,IAAqBhE,EAAGC,GAEpCoF,EAAWX,EAASlE,eACtB6E,GAEEH,EAAKrM,MAAMmN,sBAAsB1G,EAAuB+F,EAAS5E,iBAMlEmF,oBACO,QACHb,UACAA,QAIJlM,MAAMkO,OAAOlH,EAAGiG,GAEjBT,MAGUA,EAAS5E,cAAemE,EAAaqB,KAAMf,EAAKgB,cAChDb,EAAS5E,cAAemE,EAAauB,KAAMjB,EAAKkB,sBAIhEnB,YAA6C,SAACpF,YAC7B8E,EAAUE,MAElBK,EAAKF,gBAAgBnF,MAG9BmH,UAA2C,SAACnH,YAC3B8E,EAAUE,MAElBK,EAAKkB,eAAevG,MAI7BoH,aAA8C,SAACpH,YAE9B8E,EAAUuC,MAElBhC,EAAKF,gBAAgBnF,MAG9BsH,WAA4C,SAACtH,YAE5B8E,EAAUuC,MAElBhC,EAAKkB,eAAevG,+EAlLrBwF,EAAWX,EAASlE,YAAY4G,SAClC/B,EAAU,KACL5E,EAAiB4E,EAAjB5E,gBACKA,EAAekE,EAAUE,MAAMoB,KAAMmB,KAAKlB,cAC1CzF,EAAekE,EAAUuC,MAAMjB,KAAMmB,KAAKlB,cAC1CzF,EAAekE,EAAUE,MAAMsB,KAAMiB,KAAKhB,kBAC1C3F,EAAekE,EAAUuC,MAAMf,KAAMiB,KAAKhB,gBAClDgB,KAAKvO,MAAMmN,sBAAsB1G,EAAuBmB,4CAiLvD4G,EAAMC,aAAaD,EAAME,SAASC,KAAKJ,KAAKvO,MAAM4O,iBFrPtD,eAAoBC,kFAIV,QACVA,GEiPMC,CAAWP,KAAKvO,MAAM4O,SAAS5O,MAAMsE,mBAI/BiK,KAAKnC,yBACJmC,KAAKH,uBACRG,KAAKJ,qBACJI,KAAKD,oBApVoBE,EAAMO,WAA5B9C,EAEZ+C,YAAc,gBAFF/C,EAIZgD,yBAOUnN,EAAUjB,cAMfiB,EAAUjB,0BAOEiB,EAAUjB,kBAMlB,SAASb,EAA2BC,MAC5CD,EAAMC,IAA0C,IAA7BD,EAAMC,GAAUiP,eAC/B,IAAI3O,MAAM,sDAOduB,EAAUV,QAAQU,EAAUf,cAM3Be,EAAUf,cAsBTe,EAAUb,cAsBVa,EAAUb,eAMTa,EAAUhB,YAMXgB,EAAUhB,YAMVgB,EAAUhB,iBAMLgB,EAAUhB,eAKZ6C,QACJA,YACIA,GAxHMsI,EA2HZkD,6BACU,SACP,eACE,wBACY,eACR,YACN,UACF,eACK,aACF,oBACD,oBACA,yBACK,cC7MjB,IAAIC,EAAU,WACV,GAAmB,oBAARC,IACP,OAAOA,IAUX,SAASC,EAASC,EAAK3M,GACnB,IAAI4M,GAAU,EAYd,OAVAD,EAAIE,KAAK,SAAUC,EAAOC,GACtB,OAAID,EAAM,KAAO9M,IACb4M,EAASG,GAEF,KAMRH,EAGX,OAAQ,WACJ,SAASI,IACLrB,KAAKsB,eAGT,IAAIC,GAAuBC,MAAQC,cAAc,IAiFjD,OA5EAF,EAAmBC,KAAKE,IAAM,WAC1B,OAAO1B,KAAKsB,YAAYzN,QAO5BwN,EAAUnR,UAAUwR,IAAM,SAAUrN,GAChC,IAAI+M,EAAQL,EAASf,KAAKsB,YAAajN,GACnC8M,EAAQnB,KAAKsB,YAAYF,GAE7B,OAAOD,GAASA,EAAM,IAQ1BE,EAAUnR,UAAUyR,IAAM,SAAUtN,EAAKuN,GACrC,IAAIR,EAAQL,EAASf,KAAKsB,YAAajN,IAElC+M,EACDpB,KAAKsB,YAAYF,GAAO,GAAKQ,EAE7B5B,KAAKsB,YAAYtN,MAAMK,EAAKuN,KAQpCP,EAAUnR,UAAU2R,OAAS,SAAUxN,GACnC,IAAIyN,EAAU9B,KAAKsB,YACfF,EAAQL,EAASe,EAASzN,IAEzB+M,GACDU,EAAQC,OAAOX,EAAO,IAQ9BC,EAAUnR,UAAU8R,IAAM,SAAU3N,GAChC,SAAU0M,EAASf,KAAKsB,YAAajN,IAMzCgN,EAAUnR,UAAU+R,MAAQ,WACxBjC,KAAKsB,YAAYS,OAAO,IAQ5BV,EAAUnR,UAAUe,QAAU,SAAU0D,EAAUuN,QAEjC,IAARA,IAAiBA,EAAM,MAE5B,IAAK,IAAIxR,EAAI,EAAGyR,EAHHnC,KAGiBsB,YAAa5Q,EAAIyR,EAAKtO,OAAQnD,GAAK,EAAG,CAChE,IAAIyQ,EAAQgB,EAAKzR,GAEjBiE,EAASL,KAAK4N,EAAKf,EAAM,GAAIA,EAAM,MAI3CnR,OAAOoS,iBAAkBf,EAAUnR,UAAWqR,GAEvCF,KAlHD,GAyHVgB,EAA8B,oBAAX5N,QAA8C,oBAAbqB,UAA4BrB,OAAOqB,WAAaA,SAGpGwM,EACsB,oBAAXC,QAA0BA,OAAOhH,OAASA,KAC1CgH,OAGS,oBAATC,MAAwBA,KAAKjH,OAASA,KACtCiH,KAGW,oBAAX/N,QAA0BA,OAAO8G,OAASA,KAC1C9G,OAIJgO,SAAS,cAATA,GASPC,EACqC,mBAA1BC,sBAIAA,sBAAsBC,KAAKN,GAG/B,SAAU3N,GAAY,OAAOkO,WAAW,WAAc,OAAOlO,EAASmO,KAAKC,QAAW,IAAO,KAIpGC,EAAkB,EAiFlBC,GAAkB,MAAO,QAAS,SAAU,OAAQ,QAAS,SAAU,OAAQ,UAG/EC,EAAwD,oBAArBC,iBAKnCC,EAA2B,WAC3BpD,KAAKqD,YAAa,EAClBrD,KAAKsD,sBAAuB,EAC5BtD,KAAKuD,mBAAqB,KAC1BvD,KAAKwD,cAELxD,KAAKyD,iBAAmBzD,KAAKyD,iBAAiBb,KAAK5C,MACnDA,KAAK0D,QAtFM,SAAU/O,EAAUgP,GAC/B,IAAIC,GAAc,EACdC,GAAe,EACfC,EAAe,EAQnB,SAASC,IACDH,IACAA,GAAc,EAEdjP,KAGAkP,GACAG,IAWR,SAASC,IACLvB,EAAwBqB,GAQ5B,SAASC,IACL,IAAIE,EAAYpB,KAAKC,MAErB,GAAIa,EAAa,CAEb,GAAIM,EAAYJ,EAAed,EAC3B,OAOJa,GAAe,OAEfD,GAAc,EACdC,GAAe,EAEfhB,WAAWoB,EAAiBN,GAGhCG,EAAeI,EAGnB,OAAOF,EAuBQG,CAASnE,KAAK0D,QAAQd,KAAK5C,MAnB1B,KAgDpBoD,EAAyBlT,UAAUkU,YAAc,SAAUC,IACjDrE,KAAKwD,WAAWc,QAAQD,IAC1BrE,KAAKwD,WAAWxP,KAAKqQ,GAIpBrE,KAAKqD,YACNrD,KAAKuE,YAUbnB,EAAyBlT,UAAUsU,eAAiB,SAAUH,GAC1D,IAAII,EAAYzE,KAAKwD,WACjBpC,EAAQqD,EAAUH,QAAQD,IAGzBjD,GACDqD,EAAU1C,OAAOX,EAAO,IAIvBqD,EAAU5Q,QAAUmM,KAAKqD,YAC1BrD,KAAK0E,eAUbtB,EAAyBlT,UAAUwT,QAAU,WACnB1D,KAAK2E,oBAKvB3E,KAAK0D,WAYbN,EAAyBlT,UAAUyU,iBAAmB,WAElD,IAAIC,EAAkB5E,KAAKwD,WAAWqB,OAAO,SAAUR,GACnD,OAAOA,EAASS,eAAgBT,EAASU,cAU7C,OAFAH,EAAgB3T,QAAQ,SAAUoT,GAAY,OAAOA,EAASW,oBAEvDJ,EAAgB/Q,OAAS,GASpCuP,EAAyBlT,UAAUqU,SAAW,WAGrClC,IAAarC,KAAKqD,aAOvBvN,SAASgB,iBAAiB,gBAAiBkJ,KAAKyD,kBAEhDhP,OAAOqC,iBAAiB,SAAUkJ,KAAK0D,SAEnCR,GACAlD,KAAKuD,mBAAqB,IAAIJ,iBAAiBnD,KAAK0D,SAEpD1D,KAAKuD,mBAAmB0B,QAAQnP,UAC5BoP,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,SAAS,MAGbvP,SAASgB,iBAAiB,qBAAsBkJ,KAAK0D,SAErD1D,KAAKsD,sBAAuB,GAGhCtD,KAAKqD,YAAa,IAStBD,EAAyBlT,UAAUwU,YAAc,WAGxCrC,GAAcrC,KAAKqD,aAIxBvN,SAASmB,oBAAoB,gBAAiB+I,KAAKyD,kBACnDhP,OAAOwC,oBAAoB,SAAU+I,KAAK0D,SAEtC1D,KAAKuD,oBACLvD,KAAKuD,mBAAmB+B,aAGxBtF,KAAKsD,sBACLxN,SAASmB,oBAAoB,qBAAsB+I,KAAK0D,SAG5D1D,KAAKuD,mBAAqB,KAC1BvD,KAAKsD,sBAAuB,EAC5BtD,KAAKqD,YAAa,IAUtBD,EAAyBlT,UAAUuT,iBAAmB,SAAU8B,GACxD,IAAIC,EAAeD,EAAIC,kBAAoC,IAAjBA,IAA0BA,EAAe,IAGhEvC,EAAe/B,KAAK,SAAU7M,GACjD,SAAUmR,EAAalB,QAAQjQ,MAI/B2L,KAAK0D,WASbN,EAAyBqC,YAAc,WAKnC,OAJKzF,KAAK0F,YACN1F,KAAK0F,UAAY,IAAItC,GAGlBpD,KAAK0F,WAGhBtC,EAAyBsC,UAAY,KASrC,IAAIC,WAAgCxH,EAAQ1M,GACxC,IAAK,IAAIf,EAAI,EAAGyR,EAAOnS,OAAOmB,KAAKM,GAAQf,EAAIyR,EAAKtO,OAAQnD,GAAK,EAAG,CAChE,IAAI2D,EAAM8N,EAAKzR,GAEfV,OAAO4V,eAAezH,EAAQ9J,GAC1BuN,MAAOnQ,EAAM4C,GACbwR,YAAY,EACZC,UAAU,EACVrE,cAAc,IAItB,OAAOtD,GASP4H,WAAyB5H,GAQzB,OAJkBA,GAAUA,EAAO9E,eAAiB8E,EAAO9E,cAAcE,aAInD+I,GAItB0D,EAAYC,GAAe,EAAG,EAAG,EAAG,GAQxC,SAASC,EAAQtE,GACb,OAAOuE,WAAWvE,IAAU,EAUhC,SAASwE,EAAeC,GAEpB,IADA,IAAIC,KAAgBC,EAAM3S,UAAUC,OAAS,EACrC0S,KAAQ,GAAID,EAAWC,GAAQ3S,UAAW2S,EAAM,GAExD,OAAOD,EAAUE,OAAO,SAAUhF,EAAM/C,GAGpC,OAAO+C,EAAO0E,EAFFG,EAAO,UAAY5H,EAAW,YAG3C,GA2CP,SAASgI,GAA0BtI,GAG/B,IAAI5D,EAAc4D,EAAO5D,YACrBS,EAAemD,EAAOnD,aAU1B,IAAKT,IAAgBS,EACjB,OAAOgL,EAGX,IAAIK,EAASN,EAAY5H,GAAQrE,iBAAiBqE,GAC9CuI,EArDR,SAAqBL,GAIjB,IAHA,IACIK,KAEKhW,EAAI,EAAGyR,GAHC,MAAO,QAAS,SAAU,QAGTzR,EAAIyR,EAAKtO,OAAQnD,GAAK,EAAG,CACvD,IAAI+N,EAAW0D,EAAKzR,GAEhBkR,EAAQyE,EAAO,WAAa5H,GAEhCiI,EAASjI,GAAYyH,EAAQtE,GAGjC,OAAO8E,EAyCQC,CAAYN,GACvBO,EAAWF,EAAS3N,KAAO2N,EAASzN,MACpC4N,EAAUH,EAAS1N,IAAM0N,EAASxN,OAMlCoB,EAAQ4L,EAAQG,EAAO/L,OACvBS,EAASmL,EAAQG,EAAOtL,QAwB5B,GApByB,eAArBsL,EAAOS,YAOHvL,KAAK8D,MAAM/E,EAAQsM,KAAcrM,IACjCD,GAAS8L,EAAeC,EAAQ,OAAQ,SAAWO,GAGnDrL,KAAK8D,MAAMtE,EAAS8L,KAAa7L,IACjCD,GAAUqL,EAAeC,EAAQ,MAAO,UAAYQ,KA0DhE,SAA2B1I,GACvB,OAAOA,IAAW4H,EAAY5H,GAAQrI,SAASE,gBAnD1C+Q,CAAkB5I,GAAS,CAK5B,IAAI6I,EAAgBzL,KAAK8D,MAAM/E,EAAQsM,GAAYrM,EAC/C0M,EAAiB1L,KAAK8D,MAAMtE,EAAS8L,GAAW7L,EAOpB,IAA5BO,KAAK2L,IAAIF,KACT1M,GAAS0M,GAGoB,IAA7BzL,KAAK2L,IAAID,KACTlM,GAAUkM,GAIlB,OAAOhB,GAAeS,EAAS3N,KAAM2N,EAAS1N,IAAKsB,EAAOS,GAS9D,IAAIoM,GAGkC,oBAAvBC,mBACA,SAAUjJ,GAAU,OAAOA,aAAkB4H,EAAY5H,GAAQiJ,oBAMrE,SAAUjJ,GAAU,OAAOA,aAAkB4H,EAAY5H,GAAQkJ,YAAwC,mBAAnBlJ,EAAOmJ,SAmBxG,SAASC,GAAepJ,GACpB,OAAKkE,EAID8E,GAAqBhJ,GAjI7B,SAA2BA,GACvB,IAAIqJ,EAAOrJ,EAAOmJ,UAElB,OAAOrB,GAAe,EAAG,EAAGuB,EAAKlN,MAAOkN,EAAKzM,QA+HlC0M,CAAkBtJ,GAGtBsI,GAA0BtI,GAPtB6H,EAiDf,SAASC,GAAerN,EAAGC,EAAGyB,EAAOS,GACjC,OAASnC,EAAGA,EAAGC,EAAGA,EAAGyB,MAAOA,EAAOS,OAAQA,GAO/C,IAAI2M,GAAoB,SAASvJ,GAC7B6B,KAAK2H,eAAiB,EACtB3H,KAAK4H,gBAAkB,EACvB5H,KAAK6H,aAAe5B,GAAe,EAAG,EAAG,EAAG,GAE5CjG,KAAK7B,OAASA,GAuBlBuJ,GAAkBxX,UAAU4X,SAAW,WACnC,IAAIC,EAAOR,GAAevH,KAAK7B,QAI/B,OAFA6B,KAAK6H,aAAeE,EAEbA,EAAKzN,QAAU0F,KAAK2H,gBAAkBI,EAAKhN,SAAWiF,KAAK4H,iBAStEF,GAAkBxX,UAAU8X,cAAgB,WACxC,IAAID,EAAO/H,KAAK6H,aAKhB,OAHA7H,KAAK2H,eAAiBI,EAAKzN,MAC3B0F,KAAK4H,gBAAkBG,EAAKhN,OAErBgN,GAGX,IAAIE,GAAsB,SAAS9J,EAAQ+J,GACvC,IA5FwB3C,EACpB3M,EACAC,EACAyB,EACAS,EAGAoN,EACAJ,EAoFAK,GA3FAxP,GADoB2M,EA4Fa2C,GA3FzBtP,EACRC,EAAI0M,EAAI1M,EACRyB,EAAQiL,EAAIjL,MACZS,EAASwK,EAAIxK,OAGboN,EAAoC,oBAApBE,gBAAkCA,gBAAkBrY,OACpE+X,EAAO/X,OAAOsY,OAAOH,EAAOjY,WAGhCyV,EAAmBoC,GACfnP,EAAGA,EAAGC,EAAGA,EAAGyB,MAAOA,EAAOS,OAAQA,EAClC/B,IAAKH,EACLI,MAAOL,EAAI0B,EACXpB,OAAQ6B,EAASlC,EACjBE,KAAMH,IAGHmP,GAiFPpC,EAAmB3F,MAAQ7B,OAAQA,EAAQiK,YAAaA,KAGxDG,GAAoB,SAAS5T,EAAU6T,EAAYC,GAInD,GAHAzI,KAAK0I,uBACL1I,KAAK2I,cAAgB,IAAI9H,EAED,mBAAblM,EACP,MAAM,IAAIiU,UAAU,2DAGxB5I,KAAK6I,UAAYlU,EACjBqL,KAAK8I,YAAcN,EACnBxI,KAAK+I,aAAeN,GA+BxBF,GAAkBrY,UAAU+U,QAAU,SAAU9G,GAC5C,IAAKvK,UAAUC,OACX,MAAM,IAAI+U,UAAU,4CAIxB,GAAuB,oBAAZI,SAA6BA,mBAAmBhZ,OAA3D,CAIA,KAAMmO,aAAkB4H,EAAY5H,GAAQ6K,SACxC,MAAM,IAAIJ,UAAU,yCAGxB,IAAIK,EAAejJ,KAAK2I,cAGpBM,EAAajH,IAAI7D,KAIrB8K,EAAatH,IAAIxD,EAAQ,IAAIuJ,GAAkBvJ,IAE/C6B,KAAK8I,YAAY1E,YAAYpE,MAG7BA,KAAK8I,YAAYpF,aASrB6E,GAAkBrY,UAAUgZ,UAAY,SAAU/K,GAC9C,IAAKvK,UAAUC,OACX,MAAM,IAAI+U,UAAU,4CAIxB,GAAuB,oBAAZI,SAA6BA,mBAAmBhZ,OAA3D,CAIA,KAAMmO,aAAkB4H,EAAY5H,GAAQ6K,SACxC,MAAM,IAAIJ,UAAU,yCAGxB,IAAIK,EAAejJ,KAAK2I,cAGnBM,EAAajH,IAAI7D,KAItB8K,EAAapH,OAAO1D,GAEf8K,EAAazH,MACdxB,KAAK8I,YAAYtE,eAAexE,SASxCuI,GAAkBrY,UAAUoV,WAAa,WACrCtF,KAAKmJ,cACLnJ,KAAK2I,cAAc1G,QACnBjC,KAAK8I,YAAYtE,eAAexE,OASpCuI,GAAkBrY,UAAU4U,aAAe,WACnC,IAAIsE,EAASpJ,KAEjBA,KAAKmJ,cAELnJ,KAAK2I,cAAc1X,QAAQ,SAAUoY,GAC7BA,EAAYvB,YACZsB,EAAOV,oBAAoB1U,KAAKqV,MAW5Cd,GAAkBrY,UAAU8U,gBAAkB,WAE1C,GAAKhF,KAAK+E,YAAV,CAIA,IAAI7C,EAAMlC,KAAK+I,aAGXjH,EAAU9B,KAAK0I,oBAAoB9X,IAAI,SAAUyY,GACjD,OAAO,IAAIpB,GAAoBoB,EAAYlL,OAAQkL,EAAYrB,mBAGnEhI,KAAK6I,UAAUvU,KAAK4N,EAAKJ,EAASI,GAClClC,KAAKmJ,gBAQTZ,GAAkBrY,UAAUiZ,YAAc,WACtCnJ,KAAK0I,oBAAoB3G,OAAO,IAQpCwG,GAAkBrY,UAAU6U,UAAY,WACpC,OAAO/E,KAAK0I,oBAAoB7U,OAAS,GAM7C,IAAI4Q,GAA+B,oBAAZ6E,QAA0B,IAAIA,QAAY,IAAIzI,EAMjE0I,GAAiB,SAAS5U,GAC1B,KAAMqL,gBAAgBuJ,IAClB,MAAM,IAAIX,UAAU,sCAExB,IAAKhV,UAAUC,OACX,MAAM,IAAI+U,UAAU,4CAGxB,IAAIJ,EAAapF,EAAyBqC,cACtCpB,EAAW,IAAIkE,GAAkB5T,EAAU6T,EAAYxI,MAE3DyE,GAAU9C,IAAI3B,KAAMqE,KAIvB,UAAW,YAAa,cAAcpT,QAAQ,SAAUqF,GACrDiT,GAAerZ,UAAUoG,GAAU,WAC/B,OAAQiP,EAAMd,GAAU/C,IAAI1B,OAAO1J,GAAQlC,MAAMmR,EAAK3R,WACtD,IAAI2R,KAIZ,IAAInE,QAEuC,IAA5BkB,EAASiH,eACTjH,EAASiH,eAGbA,GCv/BUC,yBAGP7Q,kBACL8Q,GAAK,IAAIF,GAAe,iBACZ7Q,EAAiBC,EAAWA,EAAUkE,MAAMjE,EAAGD,EAAUkE,MAAMhE,EAAGF,EAAUG,iBAApFF,OAAGC,SACA2F,UAAW5F,IAAGC,kEAIJJ,GAClBuH,KAAK0J,mBACFD,GAAGP,UAAUlJ,KAAK0J,mBAEpBA,aAAejR,OACfgR,GAAGxE,QAAQjF,KAAK0J,wEAIhBD,GAAGP,UAAUlJ,KAAK0J,mBAClBA,kBAAeC,WCeHC,0BAoIPnY,4EACJA,aA8DRoY,YAAqC,SAACpR,EAAG0E,OAMnB,IAFAW,EAAKrM,MAAMkN,QAAQlG,EAAGyE,IAA0BC,IAEzC,OAAO,IAE7BqB,UAAUkB,UAAU,EAAMoK,SAAS,OAG1CxK,OAAgC,SAAC7G,EAAG0E,OAC7BW,EAAKjB,MAAM6C,SAAU,OAAO,MAG3BqK,EAAS7M,IAA0BC,GAEnC6M,KACDD,EAAOnR,IACPmR,EAAOlR,MAIRiF,EAAKrM,MAAMqH,OAAQ,KAEdF,EAAQoR,EAARpR,EAAGC,EAAKmR,EAALnR,IAKDD,GAAKkF,EAAKjB,MAAMoN,SAChBpR,GAAKiF,EAAKjB,MAAMqN,aAGMxR,IAAuBsR,EAASpR,EAAGoR,EAASnR,EAAGiF,EAAKrM,MAAMqH,iBAAlFqR,OAAWC,SACTxR,EAAIuR,IACJtR,EAAIuR,IAGJH,OAASnM,EAAKjB,MAAMoN,QAAUrR,EAAIoR,EAASpR,KAC3CsR,OAASpM,EAAKjB,MAAMqN,QAAUrR,EAAImR,EAASnR,KAG7CD,EAAIoR,EAASpR,IACbC,EAAImR,EAASnR,IACbwE,OAAS2M,EAASpR,EAAIkF,EAAKjB,MAAMjE,IACjCoE,OAASgN,EAASnR,EAAIiF,EAAKjB,MAAMhE,MAKrB,IADAiF,EAAKrM,MAAM6N,OAAO7G,EAAGsR,GACd,OAAO,IAE9BvL,SAASwL,MAGhBK,WAAoC,SAAC5R,EAAG0E,OACjCW,EAAKjB,MAAM6C,SAAU,OAAO,MAId,IADA5B,EAAKrM,MAAMkO,OAAOlH,EAAGyE,IAA0BC,IACxC,OAAO,MAI3B6M,aACM,SACF,SACA,MAKSM,QAAQxM,EAAKrM,MAAMgN,UACtB,OACCX,EAAKrM,MAAMgN,SAAnB7F,IAAAA,EAAGC,IAAAA,IACDD,EAAIA,IACJC,EAAIA,IAGV2F,SAASwL,MA5ITnN,iBAEO,WAGD,IAGNpL,EAAMgN,SAAWhN,EAAMgN,SAAS7F,EAAInH,EAAM8Y,gBAAgB3R,IAC1DnH,EAAMgN,SAAWhN,EAAMgN,SAAS5F,EAAIpH,EAAM8Y,gBAAgB1R,SAGrD,EAAGqR,OAAQ,gBAGL,KAGXvQ,eAAiB,IAAI6P,uEAItBxJ,KAAKvO,MAAMgN,UAAcuB,KAAKvO,MAAM6N,QAAUU,KAAKvO,MAAMkO,gBAEnD6K,KAAK,8QAQiB,IAAtB/V,OAAO4S,YAA8B/J,EAASlE,YAAY4G,gBAAiBvL,OAAO4S,iBACrF7I,UAAWiM,cAAc,sDAMRC,MCtNEC,EDwNR3K,KAAKvO,MAAMqH,OCxNY8R,EDwNJF,EAAU5R,OCvN7C6R,IAAkBC,GACS,qBAAfA,gBAAAA,KAAoD,qBAAlBD,gBAAAA,MACzC3a,OAAOmB,KAAKwZ,GAAe9W,SAAW7D,OAAOmB,KAAKyZ,GAAY/W,QAClE7D,OAAOmB,KAAKyZ,GAAY1J,KAAK,mBAAK0J,EAAWC,KAAOF,EAAcE,MDoNb,OAErCH,EAAUjM,UAAYuB,KAAKnD,MAApCjE,IAAAA,EAAGC,IAAAA,IACoBH,EAAiBsH,KAAMpH,EAAGC,EAAG6R,EAAU5R,iBAA/DqR,OAAWC,OACdxR,IAAMuR,GAAatR,IAAMuR,QACtB5L,UAAW5F,EAAGuR,EAAWtR,EAAGuR,SCpNTU,EDsND9K,KAAKvO,MAAMgN,SCtNOsM,EDsNGL,EAAUjM,WCrNvDqM,GAAmBC,IACdD,GAAmBA,EAAgBlS,MAAQmS,GAAgBA,EAAanS,KACxEkS,GAAmBA,EAAgBjS,MAAQkS,GAAgBA,EAAalS,UDqNzE2F,UAAW5F,EAAG8R,EAAUjM,SAAS7F,EAAGC,EAAG6R,EAAUjM,SAAS5F,ICxNtC,IAACiS,EAAiBC,EATnBJ,EAAeC,sDDsOpCpM,UAAUkB,UAAU,IAErBM,KAAKrG,eAAe+P,cAAc1J,KAAKrG,eAAeqR,sELzH1BpS,EAAGC,IKgN/B9C,KAAYkV,EAAe,KAIzBtS,GADa2R,QAAQtK,KAAKvO,MAAMgN,WACLuB,KAAKnD,MAAM6C,SAEtCjB,EAAWuB,KAAKvO,MAAMgN,UAAYuB,KAAKvO,MAAM8Y,gBAC7CW,KJlQH,SAAkBvS,SACS,SAAzBA,EAAUlH,MAAM0Z,MAA4C,MAAzBxS,EAAUlH,MAAM0Z,KImQnDC,CAASpL,OAASrH,EACnBqH,KAAKnD,MAAMjE,EACX6F,EAAS7F,IJlQV,SAAkBD,SACS,SAAzBA,EAAUlH,MAAM0Z,MAA4C,MAAzBxS,EAAUlH,MAAM0Z,KIoQnDE,CAASrL,OAASrH,EACnBqH,KAAKnD,MAAMhE,EACX4F,EAAS5F,GAITmH,KAAKnD,MAAM4N,eL9NV,gBK+N+BS,GLhOJtS,EACR,MADWC,EACD,KANFD,KK2OHsS,GL3OGtS,EAAGC,IAAAA,SAE5BvD,EAAmB,YAAagW,GAAiB,aAAe1S,EAAI,MAAQC,EAAI,cKgPnFmH,KAAKvO,MAHP8Z,IAAAA,iBACAC,IAAAA,yBACAC,IAAAA,wBAGIpL,EAAWJ,EAAME,SAASC,KAAKJ,KAAKvO,MAAM4O,UAG1CjJ,EAAY1D,EAAY2M,EAAS5O,MAAM2F,WAAa,GAAKmU,UAC5DC,EAA2BxL,KAAKnD,MAAM6C,cACtC+L,EAA0BzL,KAAKnD,MAAMiN,oBAMtC7J,uBAAmBD,KAAKvO,OAAOkN,QAASqB,KAAK6J,YAAavK,OAAQU,KAAKV,OAAQK,OAAQK,KAAKqK,eACnFnK,aAAaG,aACPjJ,aACAiJ,EAAS5O,MAAMsE,MAAUA,aACzBkV,YA1UkBhL,EAAMO,kBAAxBoJ,GAGZnJ,YAAc,YAHFmJ,GAKZlJ,eAEFhD,EAAcgD,gBAeXnN,EAAUL,OAAO,OAAQ,IAAK,IAAK,gBA4BjCK,EAAUJ,WAChBI,EAAUH,YACFG,EAAUf,aACTe,EAAUf,WACZe,EAAUf,cACPe,EAAUf,SAEpBe,EAAUb,OACVa,EAAUL,QAAO,uBAGDK,EAAUb,gCACFa,EAAUb,+BACXa,EAAUb,uBAmBlBa,EAAUH,SACtBG,EAAUf,SACVe,EAAUf,kBAuBLe,EAAUH,SACfG,EAAUf,SACVe,EAAUf,mBAMJ4C,QACJA,YACIA,IArHMwU,GAwHZhJ,kBACFlD,EAAckD,mBACX,eACE,mBACU,2CACQ,mDACD,2CACPhI,EAAG,EAAGC,EAAG,YACjB,WACH,IElKX+Q,GAAUpV,QAAUoV,GACpBA,GAAUlM,cAAgBA"}